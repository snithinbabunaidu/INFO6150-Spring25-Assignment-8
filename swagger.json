{
    "swagger": "2.0",
    "info": {
      "title": "User Management API",
      "version": "1.0.0",
      "description": "API for managing users and handling image uploads"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": ["http"],
    "paths": {
      "/user/create": {
        "post": {
          "summary": "Create a new user",
          "description": "Creates a new user with full name, email, and password",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User object",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Password123!"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "Validation failed"
            }
          }
        }
      },
      "/user/edit": {
        "put": {
          "summary": "Update user details",
          "description": "Updates a user's full name and/or password",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User update object",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "password": {
                    "type": "string",
                    "example": "NewPassword123!"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "400": {
              "description": "Validation failed"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/delete": {
        "delete": {
          "summary": "Delete a user",
          "description": "Deletes a user by their email",
          "parameters": [
            {
              "name": "email",
              "in": "body",
              "description": "User's email",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/getAll": {
        "get": {
          "summary": "Get all users",
          "description": "Retrieves a list of all users",
          "responses": {
            "200": {
              "description": "List of users"
            }
          }
        }
      },
      "/user/uploadImage": {
        "post": {
          "summary": "Upload user image",
          "description": "Uploads an image for a specific user",
          "consumes": ["multipart/form-data"],
          "parameters": [
            {
              "name": "email",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "User's email"
            },
            {
              "name": "image",
              "in": "formData",
              "type": "file",
              "required": true,
              "description": "Image file (JPEG, PNG, or GIF)"
            }
          ],
          "responses": {
            "201": {
              "description": "Image uploaded successfully"
            },
            "400": {
              "description": "Invalid file format or image already exists"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    }
  }